openapi: 3.0.1
info:
  version: '2021-01-01'
  title: s3
paths:
  "/{item+}":
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Empty"
          headers:
            content-type:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
        '400':
          description: 400 response
        '500':
          description: 500 response
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [ObjectStorageApiRole, Arn]
        responses:
          4\d{2}:
            statusCode: '400'
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.content-type: integration.response.header.content-type
              method.response.header.Content-Type: integration.response.header.Content-Type
          5\d{2}:
            statusCode: '500'
        requestParameters:
          integration.request.path.object: method.request.path.item
          integration.request.path.bucket: stageVariables.bucket
        uri: arn:aws:apigateway:us-east-1:s3:path/{bucket}/{object}
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: aws
        payloadFormatVersion: 1.0
    head:
      parameters:
        - name: item
          in: path
          required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Empty"
          headers:
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
        '400':
          description: 400 response
        '500':
          description: 500 response
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [ObjectStorageApiRole, Arn]
        responses:
          4\d{2}:
            statusCode: '400'
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
          5\d{2}:
            statusCode: '500'
        requestParameters:
          integration.request.path.object: method.request.path.item
          integration.request.path.bucket: stageVariables.bucket
        uri: arn:aws:apigateway:us-east-1:s3:path/{bucket}/{object}
        passthroughBehavior: when_no_match
        httpMethod: HEAD
        type: aws
    put:
      parameters:
        - name: Content-Type
          in: header
          required: false
        - name: item
          in: path
          required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Empty"
          headers:
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
        '400':
          description: 400 response
        '500':
          description: 500 response
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [ObjectStorageApiRole, Arn]
        responses:
          4\d{2}:
            statusCode: '400'
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Content-Length: integration.response.header.Content-Length
          5\d{2}:
            statusCode: '500'
        requestParameters:
          integration.request.header.x-amz-acl: "'authenticated-read'"
          integration.request.header.Content-Type: method.request.header.Content-Type
          integration.request.path.bucket: stageVariables.bucket
          integration.request.path.object: method.request.path.item
        uri: arn:aws:apigateway:us-east-1:s3:path/{bucket}/{object}
        passthroughBehavior: when_no_match
        httpMethod: PUT
        type: aws
    delete:
      parameters:
        - name: item
          in: path
          required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Empty"
          headers:
            Content-Length:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
        '400':
          description: 400 response
        '500':
          description: 500 response
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [ObjectStorageApiRole, Arn]
        responses:
          4\d{2}:
            statusCode: '400'
          default:
            statusCode: '200'
          5\d{2}:
            statusCode: '500'
        requestParameters:
          integration.request.path.object: method.request.path.item
          integration.request.path.bucket: stageVariables.bucket
        uri: arn:aws:apigateway:us-east-1:s3:path/{bucket}/{object}
        passthroughBehavior: when_no_match
        httpMethod: DELETE
        type: aws
components:
  schemas:
    Empty:
      type: object
      title: Empty Schema
  securitySchemes:
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
x-amazon-apigateway-cors:
  allowOrigins:
    - "*"
  allowCredentials: false
  maxAge: 0
  allowMethods:
    - GET
    - POST
    - PUT
    - OPTIONS
  allowHeaders:
    - "*"